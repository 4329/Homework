// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ClimberClimb.h"
#include "Commands/ClimberClimbSequence.h"
#include "Commands/ClimberPause.h"
#include "Commands/ClimberTimedClimb.h"
#include "Commands/DriveTrainManualControl.h"
#include "Commands/DriveTrainPause.h"
#include "Commands/DriveTrainTimedMoveBackward.h"
#include "Commands/DriveTrainTimedMoveForward.h"
#include "Commands/FloorGearDeployPickup.h"
#include "Commands/FloorGearPause.h"
#include "Commands/FloorGearRetractPickup.h"
#include "Commands/FloorGearTogglePickup.h"
#include "Commands/StationGearCloseFlap.h"
#include "Commands/StationGearCloseVent.h"
#include "Commands/StationGearDeployGearHolder.h"
#include "Commands/StationGearOpenFlap.h"
#include "Commands/StationGearOpenVent.h"
#include "Commands/StationGearPause.h"
#include "Commands/StationGearRetractGearHolder.h"
#include "Commands/StationGearToggleFlap.h"
#include "Commands/TansmissionUpShift.h"
#include "Commands/TransmissionDownShift.h"
#include "Commands/TransmissionToggleShift.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    theDriver.reset(new Joystick(2));
    
    theOperator.reset(new Joystick(1));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("ClimberClimb", new ClimberClimb());
    SmartDashboard::PutData("FloorGearTogglePickup", new FloorGearTogglePickup());
    SmartDashboard::PutData("FloorGearRetractPickup", new FloorGearRetractPickup());
    SmartDashboard::PutData("FloorGearDeployPickup", new FloorGearDeployPickup());
    SmartDashboard::PutData("StationGearToggleFlap", new StationGearToggleFlap());
    SmartDashboard::PutData("StationGearCloseFlap", new StationGearCloseFlap());
    SmartDashboard::PutData("StationGearOpenFlap", new StationGearOpenFlap());
    SmartDashboard::PutData("StationGearRetractGearHolder", new StationGearRetractGearHolder());
    SmartDashboard::PutData("StationGearDeployGearHolder", new StationGearDeployGearHolder());
    SmartDashboard::PutData("StationGearCloseVent", new StationGearCloseVent());
    SmartDashboard::PutData("StationGearOpenVent", new StationGearOpenVent());
    SmartDashboard::PutData("TransmissionToggleShift", new TransmissionToggleShift());
    SmartDashboard::PutData("TransmissionDownShift", new TransmissionDownShift());
    SmartDashboard::PutData("TansmissionUpShift", new TansmissionUpShift());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::gettheOperator() {
   return theOperator;
}

std::shared_ptr<Joystick> OI::gettheDriver() {
   return theDriver;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
